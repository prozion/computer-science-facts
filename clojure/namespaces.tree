namespaces
	clojure
		core d:"Fundamental library of the Clojure language"
		data prots:Diff,EqualityPartition fns:diff d:"Non-core data functions"
		datafy fns:datafy,nav d:"Functions to turn objects into data. Alpha, subject to change"
		edn fns:read,read-string
		inspector
		instant
		java
			browse
			io
			javadoc
			shell
		main fns:demunge,err->msg,ex-str,ex-triage,load-script,mainrenumbering-read,repl,repl-caught,repl-exception,repl-prompt,repl-read,repl-requires,report-error,root-cause,skip-if-eol,skip-whitespace,stack-element-str,with-bindings,with-read-known d:"Top-level main function for Clojure REPL and scripts"
		pprint
		reflect
		repl fns:apropos,demunge,dir,dir-fn,doc.find-doc,pst,root-cause,set-break-handler!,source,source-fn,stack-element-str,thread-stopper d:"Utilities meant to be used interactively at the REPL"
		set
		stacktrace
		string
		template
		test
		walk fns:keywordize-keys,macroexpand-all,postwalk,postwalk-demo,postwalk-replace,prewalk,prewalk-demo,prewalk-replace,prewalk-keys,walk d:"This file defines a generic tree walker for Clojure data structures.  It takes any data structure (list, vector, map, set, seq), calls a function on every element, and uses the return value of the function in place of the original.  This makes it fairly easy to write recursive search-and-replace functions, as shown in the examples"
		xml
		zip